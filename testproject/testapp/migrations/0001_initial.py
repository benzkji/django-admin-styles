# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2018-10-05 10:15
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdminStylesTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boolean', models.BooleanField(default=True, help_text='this is a help text for the boolean field', verbose_name='boolean')),
                ('char', models.CharField(help_text='this is a help text for the char field', max_length=250, verbose_name='charfield')),
                ('char_choices', models.CharField(choices=[('one', 'one'), ('two', 'two'), ('three', 'three'), ('four', 'alkdsjalksdj asdlkj asdlkajs dlakjds lakjdslkajsd l')], help_text='this is a help text for the char field choices', max_length=250, verbose_name='charfield choices')),
                ('date', models.DateField(default=django.utils.timezone.now, help_text='this is a help text for the date field', verbose_name='DateField')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now, help_text='this is a help text for the date time field', verbose_name='DateTimeField')),
                ('decimal', models.DecimalField(decimal_places=2, help_text='this is a help text for the date decimal field', max_digits=10, verbose_name='DecimalField')),
                ('duration', models.DurationField(help_text='this is a help text for the date duration field', verbose_name='DurationField')),
                ('email', models.EmailField(help_text='this is a help text for the date email field', max_length=254, verbose_name='EmailField')),
                ('file', models.FileField(blank=True, default='', help_text='this is a help text for the file field', upload_to='testapp', verbose_name='FileField')),
                ('filepath', models.FilePathField(allow_folders=True, blank=True, default='', help_text='this is a help text for the file path field', path=b'/home/alaric/Dev/Apps/DjangoAdminStyles/django-admin-styles/testproject/media', recursive=True, verbose_name='FilePathField')),
                ('float', models.FloatField(help_text='this is a help text for the float field', verbose_name='FloatField')),
                ('image', models.ImageField(blank=True, default='', help_text='this is a help text for the image field', upload_to='testapp', verbose_name='ImageField')),
                ('integer', models.IntegerField(help_text='this is a help text for the integer field', verbose_name='IntegerField')),
                ('ipaddress', models.GenericIPAddressField(help_text='this is a help text for the ip address field', verbose_name='GenericIPAddressField')),
                ('text', models.TextField(help_text='this is a help text for the text field', verbose_name='TextField')),
                ('time', models.TimeField(help_text='this is a help text for the time field', verbose_name='TimeField')),
                ('url', models.URLField(help_text='this is a help text for the url field', verbose_name='URLField')),
                ('foreignkey_a', models.ForeignKey(blank=True, help_text='this is a help text for the foreign key field', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='testapp_adminstylestest_foreignkey_a', to='testapp.AdminStylesTest', verbose_name='ForeignKey')),
                ('foreignkey_b', models.ForeignKey(blank=True, help_text='this is a help text for the foreign key field', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='testapp_adminstylestest_foreignkey_b', to='testapp.AdminStylesTest', verbose_name='ForeignKey')),
                ('manytomany_a', models.ManyToManyField(blank=True, help_text='this is a help text for the many to many field a', related_name='_adminstylestest_manytomany_a_+', to='testapp.AdminStylesTest', verbose_name='ManyToManyField')),
                ('manytomany_b', models.ManyToManyField(blank=True, help_text='this is a help text for the many to many field b', related_name='_adminstylestest_manytomany_b_+', to='testapp.AdminStylesTest', verbose_name='ManyToManyField')),
                ('manytomany_c', models.ManyToManyField(blank=True, help_text='this is a help text for the many to many field c', related_name='_adminstylestest_manytomany_c_+', to='testapp.AdminStylesTest', verbose_name='ManyToManyField')),
                ('manytomany_d', models.ManyToManyField(blank=True, help_text='this is a help text for the many to many field d', related_name='_adminstylestest_manytomany_d_+', to='testapp.AdminStylesTest', verbose_name='ManyToManyField')),
                ('manytomany_e', models.ManyToManyField(blank=True, help_text='this is a help text for the many to many field e', related_name='_adminstylestest_manytomany_e_+', to='testapp.AdminStylesTest', verbose_name='ManyToManyField')),
                ('onetoone', models.OneToOneField(blank=True, help_text='this is a help text for the one to one field', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='testapp_adminstylestest_onetoone', to='testapp.AdminStylesTest', verbose_name='OneToOneField')),
            ],
            options={
                'ordering': ['id'],
                'verbose_name': 'AdminStylesTest',
                'verbose_name_plural': 'AdminStylesTests',
            },
        ),
        migrations.CreateModel(
            name='AdminStylesTestProxy',
            fields=[
            ],
            options={
                'verbose_name': 'AdminStylesTest Fieldsets',
                'proxy': True,
                'verbose_name_plural': 'AdminStylesTests Fieldsets',
                'indexes': [],
            },
            bases=('testapp.adminstylestest',),
        ),
    ]
